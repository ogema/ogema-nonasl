<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Parent-POM: OGEMA master pom with project-wide settings -->
	<parent>
		<groupId>org.ogema</groupId>
		<artifactId>ogema</artifactId>
		<version>2.2.1</version>
	</parent>

	<!-- Note that groupId and version are inherited from the parent pom.xml 
		unless explicitly overwritten here -->
	<groupId>org.ogema</groupId>
	<artifactId>ogema-nonasl</artifactId>
	<packaging>pom</packaging>
	<version>2.2.1</version>
	<name>OGEMA Non-ASL components</name>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<developers>
		<developer>
			<id>cnoelle</id>
			<name>Christoph NÃ¶lle</name>
			<organization>Fraunhofer</organization>
			<organizationUrl>https://www.iee.fraunhofer.de/</organizationUrl>
		</developer>
		<developer>
			<id>zmansuroglu</id>
			<name>Zekeriya Mansuroglu</name>
			<organization>Fraunhofer</organization>
			<organizationUrl>https://www.iis.fraunhofer.de/</organizationUrl>
		</developer>
		<developer>
			<id>jlapp</id>
			<name>Jan Lapp</name>
			<organization>Fraunhofer</organization>
			<organizationUrl>https://www.iee.fraunhofer.de/</organizationUrl>
		</developer>
		<developer>
			<id>dnestle</id>
			<name>David Nestle</name>
			<organization>Fraunhofer</organization>
			<organizationUrl>https://www.iee.fraunhofer.de/</organizationUrl>
		</developer>
	</developers>
	
	<!-- Sub-projects (i.e. the OGEMA Applications): Try to keep alphabetical 
		order. -->
	<modules>
		<module>drivers</module>
	</modules>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
				</plugin>
				
								<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>3.0</version>
					<configuration>
                        <!-- see 'mvn com.mycila:license-maven-plugin:help -Ddetail=true' -->
						<header>${license.header}</header>
                        <keywords> <!-- existing license headers contain all of these keywords -->
                            <keyword>Fraunhofer-Gesellschaft</keyword>
                            <keyword>GNU</keyword>
                            <keyword>License</keyword>
                        </keywords>
						<properties>
							<year>2019</year>
							<email>info@ogema.org</email>
						</properties>
						<!-- Encoding is actually unused, see http://code.google.com/p/license-maven-plugin/issues/detail?id=115 
							which is not yet patched in the released versions (up to 1.10.0b1). The license 
							plugin will always use the platform encoding when reading the license file, 
							which is usually cp1251 on windows. To override the platform encoding used 
							in maven the system property 'file.encoding' must be set in the environment 
							variable JAVA_TOOL_OPTIONS. set JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF-8 -->
						<encoding>UTF-8</encoding>

						<includes>
							<include>src/**</include>
							<include>web/**</include>
						</includes>
						<excludes>
							<exclude>lib/**</exclude>
							<exclude>libs/**</exclude>
							<exclude>target/**</exclude>
							<exclude>**/*.txt</exclude>
							<exclude>**/data/**</exclude>
							<exclude>**/MANIFEST.MF</exclude>
							<exclude>**/.project</exclude>
							<exclude>**/.settings</exclude>
							<exclude>**/.classpath</exclude>
							<exclude>**/*.log</exclude>
							<exclude>**/jquery*.js</exclude>
							<!-- for now don't add header to any js or css file because there 
								are a lot of external files we're using where our header would be added ... -->
							<exclude>**/*.js</exclude>
							<exclude>**/*.json</exclude>
							<exclude>**/*.map</exclude>
							<exclude>**/*.css</exclude>
							<exclude>**/*.psd</exclude>
							<exclude>**/*.mp4</exclude>
							<exclude>**/*.csv</exclude>
							<exclude>**/*.svg</exclude>
							<exclude>**/*.ini</exclude>
							<exclude>**/*.properties</exclude>
							<exclude>**/*.uml</exclude>
							<exclude>**/*.umlcd</exclude>
							<exclude>**/*.eot</exclude>
							<exclude>**/*.ttf</exclude>
							<exclude>**/*.woff</exclude>
							<exclude>**/grafana-1.9.1/**/</exclude>
						</excludes>
						<useDefaultExcludes>true</useDefaultExcludes>
						<strictCheck>true</strictCheck>
						<failIfMissing>true</failIfMissing>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>format</goal>
							</goals>
							<!-- don't execute this plugin automatically -> need to be invoked 
								explicitly: mvn license:[goal] [goal] := check, format or remove -->
							<phase>validate</phase>
						</execution>
					</executions>
				</plugin>
				
								<!-- Javadoc Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.6</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<!-- 2.20 not working -->
					<version>2.19.1</version>
					<configuration>
						<argLine>-ea</argLine>
					</configuration>
				</plugin>
				<!-- Release Plugin -->
				<!-- Usage: 1. mvn release:prepare -Prelease-prepare 2. mvn release:perform 
					-Dgoals'deploy -f src/pom.xml' NOTE: unfortunately the attribute pomFileName 
					is ignored in mvn 3.0.5 and/or release-plugin version 2.5.1 so using profile 
					-Prelease-perform isn't working yet ... alternatively (with dryRun): mvn 
					release:prepare -Prelease-prepare -DdryRun=true mvn release:clean -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
				
				
			</plugins>
		</pluginManagement>
		
	</build>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>2.2.12</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
</project>
